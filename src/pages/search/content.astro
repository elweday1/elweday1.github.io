---
export const prerender = false;
import  { getCollection} from "astro:content";
import { SITE } from "@config";
import Layout from "@layouts/Layout.astro";
import PostCard from "@components/PostCard.astro";
import LinkButton from "@components/LinkButton.astro";
import Tag from "@components/Tag.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPageNumbers from "@utils/getPageNumbers";
import getItemsByTags from "@utils/getItemsByTags";
import ContentTags from "@components/ContentTags.astro";
import ProjectCard from "@components/ProjectCard.astro";
import site from "@utils/og-templates/site";

const allitems = await getCollection("blog");
const allProjects = await getCollection("projects");

const allItems = [...allitems, ...allProjects];

const allTags = await getUniqueTags("blog", "projects");

const tags = Astro.url.searchParams.getAll('tag');
const pageNum =  parseInt(Astro.url.searchParams.get('page')|| "1" )
const isTags = tags.length > 0
const Items = isTags ? getItemsByTags(allItems, tags) : allItems;
const totalPages = getPageNumbers(Items.length);
const numPages = totalPages.length; 
const lastItem = pageNum * SITE.itemsPerPage;
const startItem = lastItem - SITE.itemsPerPage;
const paginatedItems = Items.slice(startItem, lastItem);
const prev = pageNum > 1 ? "" : "disabled";
const next = pageNum < numPages ? "" : "disabled";
const tagSearchParams = isTags ? tags.map(tag => `tag=${tag}&`).join('') : ''; 



---

<data  id="tag-search-params" value={tagSearchParams}></data>
<Layout title="Search By tag", description="Search by tags used in some of my technical projects and my blog Items."  ogImage={SITE.website + "/assets/images/fallback.png"} >
  <h1 class="text-2xl tracking-wider sm:text-3xl text-start pt-6" >Tags</h1>
</div>

<ContentTags tags={tags} type="tag">
  <Tag class="bg-skin-card  text-xl  px-5  text-skin-inverted" name="VIEW-ALL" type="all" size="lg" />
</ContentTags >

    <h1 class="text-2xl tracking-wider sm:text-3xl text-start py-6 ">Search Results..</h1>
    <ul id="Items"  class="grid sm:grid-cols-2 place-self-center place-items-center  gap-2">
      {
        paginatedItems
          .map(
            (item) =>
            (
              item.collection === "projects" ?
              <ProjectCard project={item} /> :
              <PostCard class="size-full" post={item} />
            )
                
          )
      }
    </ul>

{
  numPages > 1 && (
    <nav class="pagination-wrapper" aria-label="Pagination">
      <LinkButton
        disabled={prev === "disabled"}
        href={`/search/content?${tagSearchParams}${pageNum - 1 !== 1 ? "page=" + (pageNum - 1) : ""}`}
        className={`mr-4 select-none ${prev}`}
        ariaLabel="Previous"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class={`${prev}-svg`}>
          <path d="M12.707 17.293 8.414 13H18v-2H8.414l4.293-4.293-1.414-1.414L4.586 12l6.707 6.707z" />
        </svg>
        Prev
      </LinkButton>
      <LinkButton
        disabled={next === "disabled"}
        href={`/search/content?${tagSearchParams}&page=${+pageNum + 1}`}
        className={`ml-4 select-none ${next}`}
        ariaLabel="Next"
      >
        Next
        <svg xmlns="http://www.w3.org/2000/svg" class={`${next}-svg`}>
          <path d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z" />
        </svg>
      </LinkButton>
    </nav>
  )
}
</Layout>

<style>
.pagination-wrapper {
  @apply mb-8 mt-auto flex justify-center;
}
.disabled {
  @apply pointer-events-none select-none opacity-50 hover:text-skin-base group-hover:fill-skin-base;
}
.disabled-svg {
  @apply group-hover:!fill-skin-base;
}
section{
    @apply justify-self-start  w-full flex flex-col gap-2  
  }
  

    h2 {
      @apply text-xl tracking-wider sm:text-2xl  text-start ;
    }
</style>



