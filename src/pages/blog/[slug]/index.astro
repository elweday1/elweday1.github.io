---
export const prerender = true 
import { getCollection } from "astro:content";
import slugify from "@utils/slugify";
import Layout from "@layouts/Layout.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import { slugifyStr } from "@utils/slugify";


export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));


  return [...postResult];
}


const { post } = Astro.props;
const { title, description, canonicalURL, pubDatetime, tags, cover } = post.data;
const slugged = slugifyStr(title);
const { Content } = await post.render();



---

<Layout
  title={title}
  description={description}
  canonicalURL={canonicalURL}
>


<main id="main-content">
    <div class="mx-auto flex w-full  justify-start px-2">
      <button
      class=" mb-2 mt-8 flex hover:opacity-75"
      onclick="history.back()"
      >
      <svg xmlns="http://www.w3.org/2000/svg"
      ><path
      d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
      ></path>
    </svg><span>back</span>
  </button>
    </div>

    <h1 transition:name={slugged} class="post-title">{title}</h1>
    <Datetime datetime={pubDatetime} size="lg" className="my-2" />
    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <figure>
         <img 
            transition:name={slugged+":image"}
            class=" rounded-2xl w-full p-2 aspect-video  object-cover" src={cover}  alt="" />
      </figure>
      
      <Content />
    </article>
    
    <ul class="my-8 flex gap-2 flex-wrap">
      {tags.sort((a, b) => a.length - b.length).map(tag => <Tag type="tag" name={slugifyStr(tag)} />)}
    </ul>
  </main>
</Layout>

<style>
  main {
    @apply mx-auto w-full px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold text-skin-accent;
  }

</style>


<script>
  document.addEventListener("astro:page-load", ()=> {
    
    let anchorlinks = document.querySelectorAll('a[href^="#"]')
   
   for (let item of anchorlinks) { // relitere 
       item.addEventListener('click', (e)=> {
           let hashval = item.getAttribute('href') as string
           let target = document.querySelector(hashval) as HTMLElement
           target.scrollIntoView({
               behavior: 'smooth',
               block: 'start'
           })
           history.pushState(null, "", hashval)
           e.preventDefault()
       })
   }
  })
</script>