---
import {Technologies} from "../types";
import {Icon} from "astro-icon"
const groupBy = <T, K extends keyof any>(arr: T[], key: (i: T) => K) =>
  arr.reduce((groups, item) => {
    (groups[key(item)] ||= []).push(item);
    return groups;
  }, {} as Record<K, T[]>);


// 
const techStackByType = groupBy(Object.values(Technologies), (tech) => tech.type);

---


<ul id="tech-stack" class="w-full flex justify-between gap-10  p-5" style={{animation: `scroll 20s linear infinite forwards`}}>
  {
      
      Object.entries(techStackByType).map(([type, stack])=>{
        return (
          <div class="stackType  flex flex-col group" data-type={type}>
            <div class=" flex bg-skin-accent bg-opacity-0 transition-all hover:bg-opacity-10 p-3 rounded-lg gap-10">
              {
                stack.map(({name, icon, url})=> 
                
                (
                  <li class="stack group/tech flex flex-col justify-center gap-2">
                      <Icon class="size-14 grid place-self-center cursor-pointer hover:scale-125 transition-all" name={icon} />
                      <h3 class="absolute -bottom-5 text-xl font-bold place-self-center opacity-0 group-hover/tech:opacity-100 transition-opacity">{name}</h3>
                  </li>

                
                ) )
              }
              </div>
              </div>
            )
          })
          
        }
        </ul>




<style>


@keyframes scroll {
  0% {
    transform: translateX(0px);
  }
  100% {
    transform: translateX(-200%);
  }
}

</style>

<script>
  document.addEventListener("astro:page-load", ()=> {
    const suffix = document.querySelector("#suffix") as HTMLElement;
    const techStack = document.querySelector("#tech-stack") as HTMLElement;
    [...document.querySelectorAll(".stackType") as NodeListOf<HTMLDataElement>].map((el) => {
      el.addEventListener("mouseover", () => {
        techStack.style.setProperty("animation-play-state", "paused" );
        suffix.innerText = " - " + el.dataset.type 
      }),
      el.addEventListener("mouseout", () => {
        suffix.innerText = ""
        techStack.style.setProperty("animation-play-state", "running" );
      })
      
    })
  })
</script>